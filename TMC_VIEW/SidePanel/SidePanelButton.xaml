<RadioButton x:Class="TMC_VIEW.SidePanel.SidePanelButton"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:TMC_VIEW.SidePanel"
             mc:Ignorable="d" 
             Name="MenuButton"
             
             d:DesignHeight="450" d:DesignWidth="800">
    <RadioButton.Resources>
        <ResourceDictionary Source="SidePanelStyle.xaml"/>
    </RadioButton.Resources>
    
    <RadioButton.Content>
        <Label Content="{Binding Text, ElementName=MenuButton}"/>
    </RadioButton.Content>
    
    <RadioButton.Style>
        <Style TargetType="RadioButton">
            <Setter Property="Padding" Value="0" />
            <Setter Property="Background" Value="{DynamicResource SidePanelBtnBackgroundBrush}"/>
            <Setter Property="Height" Value="{DynamicResource SidePanelBtnHeight}"/>
            
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Border Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter Margin="8" HorizontalAlignment="Center" VerticalAlignment="Center" Focusable="True" RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Background" Value="{DynamicResource SecondaryColorBrush}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="IsChecked" Value="False"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter Property="Background" Value="{DynamicResource SidePanelBTNOnHoverBackgroundBrush}"/>
                                </MultiTrigger.Setters>
                            </MultiTrigger>
                        
                        </ControlTemplate.Triggers>
                        
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
             

            <!--<Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        
                        <Border
			x:Name="Border"
               Background="{TemplateBinding Background}"
			BorderThickness="0"
			SnapsToDevicePixels="true">
                            <ContentPresenter
				x:Name="contentPresenter"
				Margin="8"
				HorizontalAlignment="Center"
				VerticalAlignment="Center"
				Focusable="True"
				RecognizesAccessKey="True" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter  Property="Background" Value="{DynamicResource SecondaryColorBrush}" />
                                <Setter  Property="BorderThickness" Value="2"/>
                             
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Background" Value="{DynamicResource SecondaryColorBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>-->
        </Style>
    </RadioButton.Style>


 
</RadioButton>
